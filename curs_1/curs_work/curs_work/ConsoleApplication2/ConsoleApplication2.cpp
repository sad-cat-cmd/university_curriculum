// ConsoleApplication2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#define _CRT_NONSTDC_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <locale.h>
#include <stdlib.h >
#include <string.h>

int a[3][3];// объявляем  текущее поле  3 строки и 3 столбца. если  нет ничего то поле 0, если нолик,  то  1, если крестик то 2 

// обнуление поля

void nul()
{
    //int a[3][3];
    int i, j;

    //  пробегаем по всем строкам
    for (i = 0; i < 3; i++)
    {
        // пробегаем по всем столбцам
        for (j = 0; j < 3; j++)
        {
            a[i][j] = 0;
        }
    }
}

// вывод  поля на экран

void visual()
{
    int i, j;
    printf("  0 1 2\n");

    //  пробегаем по всем строкам  
    for (i = 0; i < 3; i++)
    {
        printf("%d", i);
        // пробегаем по всем столбцам      
        for (j = 0; j < 3; j++)
        {
            if (a[i][j] == 0) { printf("| "); };
            if (a[i][j] == 1) { printf("|O"); };
            if (a[i][j] == 2) { printf("|X"); };
        }

        // переходим на следующую строку 

        printf("|\n");
        printf("________\n");
    }
}

// Ход игрока n - номер игрока На выходе: 0 - 

void hod(int n)
{
    int hi;// ход игрока
    int sto; //  номер столбца в ходе
    int str; // номер строки в ходе
    int ver = 0; // проверка на корректность хода, если нельзя сделать такой ход то 0, если можно то 1
    // запрашиваем ход,  пока не будет введен корректный ход
    int draw;
    while (ver == 0)
    {
        // ввод хода
        printf("Ваш ход. Введите номер строки и столбца. \n");
        scanf_s("%d", &hi);

        // определяем номер столбца - это последняя цифра в ходе
        sto = hi % 10;

        // определяем номер строки хода - это первая цифра
        str = (hi - sto) / 10;

        // проверка корректности хода, клетка должна быть пуста и номер должен быть один из номеров таблицы 3 на 3

        if (a[str][sto] == 0 && (hi == 00 || hi == 01 || hi == 02 || hi == 10 || hi == 11 || hi == 12 || hi == 20 || hi == 21 || hi == 22)) (ver = 1);
    }

    // если  ходил игрок 1 то поле хода  1
    if (n == 1) { a[str][sto] = 1; }
    // если  ходил игрок 2  то поле хода 2
    if (n == 2) { a[str][sto] = 2; }



}


// Проверка  Если ни один игрок не выиграл то 0, если выиграл нолик то 1 если выиграл крестик то 2
int proverka()
{
    int i;
    int res; // значение функции. Если ни один игрок не выиграл то 0, если выиграл нолик то 1 если выиграл крестик то 2
    res = 0;
    // проверяем выигрыш первого игрока

    // пробегаем по всем строкам       
    for (i = 0; i <= 9; i++)
    {
        // проверка  все ли в строке нолики
        if (a[i][0] == 1 && a[i][1] == 1 && a[i][2] == 1) { res = 1; }
    }

    // пробегаем по всем столбцам     
    for (i = 0; i <= 9; i++)
    {
        // проверка все ли в столбце нолики
        if (a[0][i] == 1 && a[1][i] == 1 && a[2][i] == 1) { res = 1; }
    }

    // проверка диагоналей
    if (a[0][0] == 1 && a[1][1] == 1 && a[2][2] == 1) { res = 1; }
    if (a[0][2] == 1 && a[1][1] == 1 && a[2][0] == 1) { res = 1; }


    // проверяем выигрыш второго игрока
    // пробегаем по всем строкам       
    for (i = 0; i <= 9; i++)
    {
        // проверка  все ли в строке крестики
        if (a[i][0] == 2 && a[i][1] == 2 && a[i][2] == 2) { res = 2; }
    }

    // пробегаем по всем столбцам
    for (i = 0; i <= 9; i++)
    {
        // проверка все ли в столбце крестики 
        if (a[0][i] == 2 && a[1][i] == 2 && a[2][i] == 2) { res = 2; }
    }

    // проверка диагоналей
    if (a[0][0] == 2 && a[1][1] == 2 && a[2][2] == 2) { res = 2; }
    if (a[0][2] == 2 && a[1][1] == 2 && a[2][0] == 2) { res = 2; }

    int count_zero = 0;
    int count_X = 0;
    for (i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (a[i][j] == 1) { count_zero++; }
            if (a[i][j] == 2) { count_X++; }
        }
    }
    if (count_zero == 5 && count_X == 4) {res = 3;}
    return res;
}


int main()
{
    setlocale(LC_ALL, "Rus");
    int igra;// состояние игры если победил нолик то 1 , если победил крестик то 2 если никто пока не победил то 0
    // обнуляем очищаем поле
    nul();
    // отображаем игровое поле
    visual();
    igra = 0;
    // пока никто не победил продолжается игра

    while (igra == 0)
    {
        // ход 1 го игрока нолика
        hod(1);
        // отображаем игровое поле
        visual();
        // проверка на победу первого игрока
        igra = proverka();
        if (igra == 1 || igra == 2 || igra == 3) {
            break;
        }
        // если первый игрок не победил , то ходит второй игрок
        if (igra == 0);
        {
            // ход второго игрока
            hod(2);
            // отображаем игровое поле
            visual();
            // проверка на победу второго игрока
            igra = proverka();
            if (igra == 1 || igra == 2 || igra == 3) {
                break;
            }
        }
        

    }
    // отображение результатов игры
    if (igra == 1) { printf("Победил нолик\n"); };
    if (igra == 2) { printf("Победил крестик\n"); };
    if (igra == 3) { printf("Ничья\n"); }
    system("pause");
    return 0;
}